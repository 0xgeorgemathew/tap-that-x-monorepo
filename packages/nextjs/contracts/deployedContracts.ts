/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  84532: {
    MockUSDC: {
      address: "0xb090ae6dd89b25d1b79718853c439d1354bf62c5",
      abi: [
        {
          type: "constructor",
          inputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "DOMAIN_SEPARATOR",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "bytes32",
              internalType: "bytes32",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "allowance",
          inputs: [
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
            {
              name: "spender",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "approve",
          inputs: [
            {
              name: "spender",
              type: "address",
              internalType: "address",
            },
            {
              name: "value",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "balanceOf",
          inputs: [
            {
              name: "account",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "decimals",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint8",
              internalType: "uint8",
            },
          ],
          stateMutability: "pure",
        },
        {
          type: "function",
          name: "eip712Domain",
          inputs: [],
          outputs: [
            {
              name: "fields",
              type: "bytes1",
              internalType: "bytes1",
            },
            {
              name: "name",
              type: "string",
              internalType: "string",
            },
            {
              name: "version",
              type: "string",
              internalType: "string",
            },
            {
              name: "chainId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "verifyingContract",
              type: "address",
              internalType: "address",
            },
            {
              name: "salt",
              type: "bytes32",
              internalType: "bytes32",
            },
            {
              name: "extensions",
              type: "uint256[]",
              internalType: "uint256[]",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "faucet",
          inputs: [
            {
              name: "to",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "mint",
          inputs: [
            {
              name: "to",
              type: "address",
              internalType: "address",
            },
            {
              name: "amount",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "name",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "nonces",
          inputs: [
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "owner",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "permit",
          inputs: [
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
            {
              name: "spender",
              type: "address",
              internalType: "address",
            },
            {
              name: "value",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "deadline",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "v",
              type: "uint8",
              internalType: "uint8",
            },
            {
              name: "r",
              type: "bytes32",
              internalType: "bytes32",
            },
            {
              name: "s",
              type: "bytes32",
              internalType: "bytes32",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "renounceOwnership",
          inputs: [],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "symbol",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "totalSupply",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "transfer",
          inputs: [
            {
              name: "to",
              type: "address",
              internalType: "address",
            },
            {
              name: "value",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "transferFrom",
          inputs: [
            {
              name: "from",
              type: "address",
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              internalType: "address",
            },
            {
              name: "value",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "transferOwnership",
          inputs: [
            {
              name: "newOwner",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "event",
          name: "Approval",
          inputs: [
            {
              name: "owner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "spender",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "value",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "EIP712DomainChanged",
          inputs: [],
          anonymous: false,
        },
        {
          type: "event",
          name: "OwnershipTransferred",
          inputs: [
            {
              name: "previousOwner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "newOwner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "Transfer",
          inputs: [
            {
              name: "from",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "value",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "error",
          name: "ECDSAInvalidSignature",
          inputs: [],
        },
        {
          type: "error",
          name: "ECDSAInvalidSignatureLength",
          inputs: [
            {
              name: "length",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "ECDSAInvalidSignatureS",
          inputs: [
            {
              name: "s",
              type: "bytes32",
              internalType: "bytes32",
            },
          ],
        },
        {
          type: "error",
          name: "ERC20InsufficientAllowance",
          inputs: [
            {
              name: "spender",
              type: "address",
              internalType: "address",
            },
            {
              name: "allowance",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "needed",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "ERC20InsufficientBalance",
          inputs: [
            {
              name: "sender",
              type: "address",
              internalType: "address",
            },
            {
              name: "balance",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "needed",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "ERC20InvalidApprover",
          inputs: [
            {
              name: "approver",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "ERC20InvalidReceiver",
          inputs: [
            {
              name: "receiver",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "ERC20InvalidSender",
          inputs: [
            {
              name: "sender",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "ERC20InvalidSpender",
          inputs: [
            {
              name: "spender",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "ERC2612ExpiredSignature",
          inputs: [
            {
              name: "deadline",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "ERC2612InvalidSigner",
          inputs: [
            {
              name: "signer",
              type: "address",
              internalType: "address",
            },
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "InvalidAccountNonce",
          inputs: [
            {
              name: "account",
              type: "address",
              internalType: "address",
            },
            {
              name: "currentNonce",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "InvalidShortString",
          inputs: [],
        },
        {
          type: "error",
          name: "OwnableInvalidOwner",
          inputs: [
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "OwnableUnauthorizedAccount",
          inputs: [
            {
              name: "account",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "StringTooLong",
          inputs: [
            {
              name: "str",
              type: "string",
              internalType: "string",
            },
          ],
        },
      ],
      inheritedFunctions: {},
      deployedOnBlock: 32822188,
    },
    TapThatXRegistry: {
      address: "0xb0a9e11c3d6d971acae3e108572d594b9a75d233",
      abi: [
        {
          type: "constructor",
          inputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "eip712Domain",
          inputs: [],
          outputs: [
            {
              name: "fields",
              type: "bytes1",
              internalType: "bytes1",
            },
            {
              name: "name",
              type: "string",
              internalType: "string",
            },
            {
              name: "version",
              type: "string",
              internalType: "string",
            },
            {
              name: "chainId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "verifyingContract",
              type: "address",
              internalType: "address",
            },
            {
              name: "salt",
              type: "bytes32",
              internalType: "bytes32",
            },
            {
              name: "extensions",
              type: "uint256[]",
              internalType: "uint256[]",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getChainAgnosticDomainSeparator",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "bytes32",
              internalType: "bytes32",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getChipOwners",
          inputs: [
            {
              name: "chip",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "address[]",
              internalType: "address[]",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getDomainSeparator",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "bytes32",
              internalType: "bytes32",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getOwnerChips",
          inputs: [
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "address[]",
              internalType: "address[]",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "hasChip",
          inputs: [
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
            {
              name: "chip",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "owner",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "ownerHasChip",
          inputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "registerChip",
          inputs: [
            {
              name: "chipAddress",
              type: "address",
              internalType: "address",
            },
            {
              name: "chipSignature",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "renounceOwnership",
          inputs: [],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "transferOwnership",
          inputs: [
            {
              name: "newOwner",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "event",
          name: "ChipRegistered",
          inputs: [
            {
              name: "chip",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "owner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "EIP712DomainChanged",
          inputs: [],
          anonymous: false,
        },
        {
          type: "event",
          name: "OwnershipTransferred",
          inputs: [
            {
              name: "previousOwner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "newOwner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "error",
          name: "ECDSAInvalidSignature",
          inputs: [],
        },
        {
          type: "error",
          name: "ECDSAInvalidSignatureLength",
          inputs: [
            {
              name: "length",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "ECDSAInvalidSignatureS",
          inputs: [
            {
              name: "s",
              type: "bytes32",
              internalType: "bytes32",
            },
          ],
        },
        {
          type: "error",
          name: "InvalidShortString",
          inputs: [],
        },
        {
          type: "error",
          name: "OwnableInvalidOwner",
          inputs: [
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "OwnableUnauthorizedAccount",
          inputs: [
            {
              name: "account",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "ReentrancyGuardReentrantCall",
          inputs: [],
        },
        {
          type: "error",
          name: "StringTooLong",
          inputs: [
            {
              name: "str",
              type: "string",
              internalType: "string",
            },
          ],
        },
      ],
      inheritedFunctions: {},
      deployedOnBlock: 32822188,
    },
    TapThatXProtocol: {
      address: "0xdbf5df200a4ba9448b75c0df243ae68bc15a0f20",
      abi: [
        {
          type: "constructor",
          inputs: [
            {
              name: "_registry",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "receive",
          stateMutability: "payable",
        },
        {
          type: "function",
          name: "MAX_TIMESTAMP_WINDOW",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "eip712Domain",
          inputs: [],
          outputs: [
            {
              name: "fields",
              type: "bytes1",
              internalType: "bytes1",
            },
            {
              name: "name",
              type: "string",
              internalType: "string",
            },
            {
              name: "version",
              type: "string",
              internalType: "string",
            },
            {
              name: "chainId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "verifyingContract",
              type: "address",
              internalType: "address",
            },
            {
              name: "salt",
              type: "bytes32",
              internalType: "bytes32",
            },
            {
              name: "extensions",
              type: "uint256[]",
              internalType: "uint256[]",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "executeAuthorizedCall",
          inputs: [
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
            {
              name: "target",
              type: "address",
              internalType: "address",
            },
            {
              name: "callData",
              type: "bytes",
              internalType: "bytes",
            },
            {
              name: "value",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "chipSignature",
              type: "bytes",
              internalType: "bytes",
            },
            {
              name: "timestamp",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "nonce",
              type: "bytes32",
              internalType: "bytes32",
            },
          ],
          outputs: [
            {
              name: "success",
              type: "bool",
              internalType: "bool",
            },
            {
              name: "returnData",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          stateMutability: "payable",
        },
        {
          type: "function",
          name: "getChainAgnosticDomainSeparator",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "bytes32",
              internalType: "bytes32",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getDomainSeparator",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "bytes32",
              internalType: "bytes32",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "registry",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "contract TapThatXRegistry",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "usedNonces",
          inputs: [
            {
              name: "",
              type: "bytes32",
              internalType: "bytes32",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "verifyChipAuth",
          inputs: [
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
            {
              name: "target",
              type: "address",
              internalType: "address",
            },
            {
              name: "callData",
              type: "bytes",
              internalType: "bytes",
            },
            {
              name: "value",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "timestamp",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "nonce",
              type: "bytes32",
              internalType: "bytes32",
            },
            {
              name: "signature",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "event",
          name: "AuthorizedCallExecuted",
          inputs: [
            {
              name: "owner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "chip",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "target",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "callData",
              type: "bytes",
              indexed: false,
              internalType: "bytes",
            },
            {
              name: "value",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "nonce",
              type: "bytes32",
              indexed: false,
              internalType: "bytes32",
            },
            {
              name: "success",
              type: "bool",
              indexed: false,
              internalType: "bool",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "EIP712DomainChanged",
          inputs: [],
          anonymous: false,
        },
        {
          type: "event",
          name: "NonceUsed",
          inputs: [
            {
              name: "nonce",
              type: "bytes32",
              indexed: true,
              internalType: "bytes32",
            },
          ],
          anonymous: false,
        },
        {
          type: "error",
          name: "ECDSAInvalidSignature",
          inputs: [],
        },
        {
          type: "error",
          name: "ECDSAInvalidSignatureLength",
          inputs: [
            {
              name: "length",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "ECDSAInvalidSignatureS",
          inputs: [
            {
              name: "s",
              type: "bytes32",
              internalType: "bytes32",
            },
          ],
        },
        {
          type: "error",
          name: "InvalidShortString",
          inputs: [],
        },
        {
          type: "error",
          name: "ReentrancyGuardReentrantCall",
          inputs: [],
        },
        {
          type: "error",
          name: "StringTooLong",
          inputs: [
            {
              name: "str",
              type: "string",
              internalType: "string",
            },
          ],
        },
      ],
      inheritedFunctions: {},
      deployedOnBlock: 32822188,
    },
    TapThatXConfiguration: {
      address: "0x3f93fc3108e3ca616250349cd7b6b920ba8a3803",
      abi: [
        {
          type: "constructor",
          inputs: [
            {
              name: "_registry",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "configurations",
          inputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "targetContract",
              type: "address",
              internalType: "address",
            },
            {
              name: "staticCallData",
              type: "bytes",
              internalType: "bytes",
            },
            {
              name: "value",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "description",
              type: "string",
              internalType: "string",
            },
            {
              name: "isActive",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getConfiguration",
          inputs: [
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
            {
              name: "chip",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "tuple",
              internalType: "struct TapThatXConfiguration.ActionConfig",
              components: [
                {
                  name: "targetContract",
                  type: "address",
                  internalType: "address",
                },
                {
                  name: "staticCallData",
                  type: "bytes",
                  internalType: "bytes",
                },
                {
                  name: "value",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "description",
                  type: "string",
                  internalType: "string",
                },
                {
                  name: "isActive",
                  type: "bool",
                  internalType: "bool",
                },
              ],
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "isConfigured",
          inputs: [
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
            {
              name: "chip",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "registry",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "contract TapThatXRegistry",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "removeConfiguration",
          inputs: [
            {
              name: "chip",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "setConfiguration",
          inputs: [
            {
              name: "chip",
              type: "address",
              internalType: "address",
            },
            {
              name: "targetContract",
              type: "address",
              internalType: "address",
            },
            {
              name: "staticCallData",
              type: "bytes",
              internalType: "bytes",
            },
            {
              name: "value",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "description",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "toggleConfiguration",
          inputs: [
            {
              name: "chip",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "event",
          name: "ConfigurationRemoved",
          inputs: [
            {
              name: "owner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "chip",
              type: "address",
              indexed: true,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "ConfigurationSet",
          inputs: [
            {
              name: "owner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "chip",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "target",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "description",
              type: "string",
              indexed: false,
              internalType: "string",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "ConfigurationToggled",
          inputs: [
            {
              name: "owner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "chip",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "isActive",
              type: "bool",
              indexed: false,
              internalType: "bool",
            },
          ],
          anonymous: false,
        },
      ],
      inheritedFunctions: {},
      deployedOnBlock: 32822188,
    },
    TapThatXExecutor: {
      address: "0x6cbb265b4cddca37334e4ed3ce07599cfe1a471a",
      abi: [
        {
          type: "constructor",
          inputs: [
            {
              name: "_protocol",
              type: "address",
              internalType: "address",
            },
            {
              name: "_configuration",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "canExecute",
          inputs: [
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
            {
              name: "chip",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "configuration",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "contract TapThatXConfiguration",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "executeTap",
          inputs: [
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
            {
              name: "chip",
              type: "address",
              internalType: "address",
            },
            {
              name: "chipSignature",
              type: "bytes",
              internalType: "bytes",
            },
            {
              name: "timestamp",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "nonce",
              type: "bytes32",
              internalType: "bytes32",
            },
          ],
          outputs: [
            {
              name: "success",
              type: "bool",
              internalType: "bool",
            },
            {
              name: "returnData",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          stateMutability: "payable",
        },
        {
          type: "function",
          name: "previewTap",
          inputs: [
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
            {
              name: "chip",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "tuple",
              internalType: "struct TapThatXConfiguration.ActionConfig",
              components: [
                {
                  name: "targetContract",
                  type: "address",
                  internalType: "address",
                },
                {
                  name: "staticCallData",
                  type: "bytes",
                  internalType: "bytes",
                },
                {
                  name: "value",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "description",
                  type: "string",
                  internalType: "string",
                },
                {
                  name: "isActive",
                  type: "bool",
                  internalType: "bool",
                },
              ],
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "protocol",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "contract TapThatXProtocol",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "event",
          name: "TapExecuted",
          inputs: [
            {
              name: "owner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "chip",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "target",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "nonce",
              type: "bytes32",
              indexed: false,
              internalType: "bytes32",
            },
            {
              name: "success",
              type: "bool",
              indexed: false,
              internalType: "bool",
            },
            {
              name: "description",
              type: "string",
              indexed: false,
              internalType: "string",
            },
          ],
          anonymous: false,
        },
        {
          type: "error",
          name: "ReentrancyGuardReentrantCall",
          inputs: [],
        },
      ],
      inheritedFunctions: {},
      deployedOnBlock: 32822188,
    },
    USDCTapPayment: {
      address: "0x78a78272e4f41748967c67a02d8f5ca5e83aacdc",
      abi: [
        {
          type: "constructor",
          inputs: [
            {
              name: "_usdc",
              type: "address",
              internalType: "address",
            },
            {
              name: "_protocol",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "checkAllowance",
          inputs: [
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
            {
              name: "amount",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getApprovalTarget",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "protocol",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "contract TapThatXProtocol",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "tapToPay",
          inputs: [
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
            {
              name: "transferCallData",
              type: "bytes",
              internalType: "bytes",
            },
            {
              name: "chipSignature",
              type: "bytes",
              internalType: "bytes",
            },
            {
              name: "timestamp",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "nonce",
              type: "bytes32",
              internalType: "bytes32",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "usdc",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "contract IERC20",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "event",
          name: "TapPaymentExecuted",
          inputs: [
            {
              name: "owner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "nonce",
              type: "bytes32",
              indexed: false,
              internalType: "bytes32",
            },
          ],
          anonymous: false,
        },
        {
          type: "error",
          name: "ReentrancyGuardReentrantCall",
          inputs: [],
        },
      ],
      inheritedFunctions: {},
      deployedOnBlock: 32734815,
    },
    TapThatXAaveRebalancer: {
      address: "0xed859863f70358e66e5b5e90df7da43a047c7e14",
      abi: [
        {
          type: "constructor",
          inputs: [
            {
              name: "poolAddress",
              type: "address",
              internalType: "address",
            },
            {
              name: "protocolAddress",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "POOL",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "contract IPool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "TAPTHATX_PROTOCOL",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "calculateOptimalFlashLoan",
          inputs: [
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
            {
              name: "config",
              type: "tuple",
              internalType: "struct TapThatXAaveRebalancer.RebalanceConfig",
              components: [
                {
                  name: "collateralAsset",
                  type: "address",
                  internalType: "address",
                },
                {
                  name: "debtAsset",
                  type: "address",
                  internalType: "address",
                },
                {
                  name: "targetHealthFactor",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "maxSlippage",
                  type: "uint256",
                  internalType: "uint256",
                },
              ],
            },
          ],
          outputs: [
            {
              name: "flashLoanAmount",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "checkATokenApproval",
          inputs: [
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
            {
              name: "collateralAsset",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "hasApproval",
              type: "bool",
              internalType: "bool",
            },
            {
              name: "aTokenAddress",
              type: "address",
              internalType: "address",
            },
            {
              name: "currentAllowance",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "executeOperation",
          inputs: [
            {
              name: "asset",
              type: "address",
              internalType: "address",
            },
            {
              name: "amount",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "premium",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "initiator",
              type: "address",
              internalType: "address",
            },
            {
              name: "params",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "executeRebalance",
          inputs: [
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
            {
              name: "config",
              type: "tuple",
              internalType: "struct TapThatXAaveRebalancer.RebalanceConfig",
              components: [
                {
                  name: "collateralAsset",
                  type: "address",
                  internalType: "address",
                },
                {
                  name: "debtAsset",
                  type: "address",
                  internalType: "address",
                },
                {
                  name: "targetHealthFactor",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "maxSlippage",
                  type: "uint256",
                  internalType: "uint256",
                },
              ],
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "getATokenAddress",
          inputs: [
            {
              name: "collateralAsset",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "aTokenAddress",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "previewRebalance",
          inputs: [
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
            {
              name: "config",
              type: "tuple",
              internalType: "struct TapThatXAaveRebalancer.RebalanceConfig",
              components: [
                {
                  name: "collateralAsset",
                  type: "address",
                  internalType: "address",
                },
                {
                  name: "debtAsset",
                  type: "address",
                  internalType: "address",
                },
                {
                  name: "targetHealthFactor",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "maxSlippage",
                  type: "uint256",
                  internalType: "uint256",
                },
              ],
            },
          ],
          outputs: [
            {
              name: "currentHealthFactor",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "needsRebalancing",
              type: "bool",
              internalType: "bool",
            },
            {
              name: "estimatedFlashLoanAmount",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "estimatedCollateralNeeded",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "event",
          name: "FlashLoanExecuted",
          inputs: [
            {
              name: "asset",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "amount",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "premium",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "RebalanceExecuted",
          inputs: [
            {
              name: "owner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "healthFactorBefore",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "healthFactorAfter",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "collateralWithdrawn",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "debtRepaid",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "excessReturned",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "error",
          name: "HealthFactorNotImproved",
          inputs: [],
        },
        {
          type: "error",
          name: "InsufficientApproval",
          inputs: [],
        },
        {
          type: "error",
          name: "InsufficientCollateral",
          inputs: [],
        },
        {
          type: "error",
          name: "InvalidAddress",
          inputs: [],
        },
        {
          type: "error",
          name: "PositionHealthy",
          inputs: [],
        },
        {
          type: "error",
          name: "ReentrancyGuardReentrantCall",
          inputs: [],
        },
        {
          type: "error",
          name: "SwapOutputInsufficient",
          inputs: [],
        },
        {
          type: "error",
          name: "Unauthorized",
          inputs: [],
        },
        {
          type: "error",
          name: "UnauthorizedFlashLoan",
          inputs: [],
        },
      ],
      inheritedFunctions: {},
      deployedOnBlock: 32822188,
    },
    TapThatXAavePositionCloser: {
      address: "0x925fe55fb22bbe7666ec0fe14d7d0f3caef7ccda",
      abi: [
        {
          type: "constructor",
          inputs: [
            {
              name: "poolAddress",
              type: "address",
              internalType: "address",
            },
            {
              name: "protocolAddress",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "POOL",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "contract IPool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "TAPTHATX_PROTOCOL",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "calculateFlashLoanAmount",
          inputs: [
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
            {
              name: "debtAsset",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "flashLoanAmount",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "checkATokenApproval",
          inputs: [
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
            {
              name: "collateralAsset",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "hasApproval",
              type: "bool",
              internalType: "bool",
            },
            {
              name: "aTokenAddress",
              type: "address",
              internalType: "address",
            },
            {
              name: "currentAllowance",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "closePosition",
          inputs: [
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
            {
              name: "config",
              type: "tuple",
              internalType: "struct TapThatXAavePositionCloser.CloseConfig",
              components: [
                {
                  name: "collateralAsset",
                  type: "address",
                  internalType: "address",
                },
                {
                  name: "debtAsset",
                  type: "address",
                  internalType: "address",
                },
                {
                  name: "maxSlippage",
                  type: "uint256",
                  internalType: "uint256",
                },
              ],
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "executeOperation",
          inputs: [
            {
              name: "asset",
              type: "address",
              internalType: "address",
            },
            {
              name: "amount",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "premium",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "initiator",
              type: "address",
              internalType: "address",
            },
            {
              name: "params",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "getATokenAddress",
          inputs: [
            {
              name: "collateralAsset",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "aTokenAddress",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "previewClose",
          inputs: [
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
            {
              name: "config",
              type: "tuple",
              internalType: "struct TapThatXAavePositionCloser.CloseConfig",
              components: [
                {
                  name: "collateralAsset",
                  type: "address",
                  internalType: "address",
                },
                {
                  name: "debtAsset",
                  type: "address",
                  internalType: "address",
                },
                {
                  name: "maxSlippage",
                  type: "uint256",
                  internalType: "uint256",
                },
              ],
            },
          ],
          outputs: [
            {
              name: "currentDebt",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "currentCollateral",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "estimatedCollateralToSwap",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "estimatedCollateralReturned",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "event",
          name: "FlashLoanExecuted",
          inputs: [
            {
              name: "asset",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "amount",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "premium",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "PositionClosed",
          inputs: [
            {
              name: "owner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "debtRepaid",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "collateralWithdrawn",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "collateralSwapped",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "excessReturned",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "error",
          name: "InvalidAddress",
          inputs: [],
        },
        {
          type: "error",
          name: "NoCollateralToWithdraw",
          inputs: [],
        },
        {
          type: "error",
          name: "NoDebtToClose",
          inputs: [],
        },
        {
          type: "error",
          name: "PositionNotFullyClosed",
          inputs: [],
        },
        {
          type: "error",
          name: "ReentrancyGuardReentrantCall",
          inputs: [],
        },
        {
          type: "error",
          name: "SwapOutputInsufficient",
          inputs: [],
        },
        {
          type: "error",
          name: "Unauthorized",
          inputs: [],
        },
        {
          type: "error",
          name: "UnauthorizedFlashLoan",
          inputs: [],
        },
      ],
      inheritedFunctions: {},
      deployedOnBlock: 32822188,
    },
  },
  11155111: {
    TapThatXRegistry: {
      address: "0xb44048b72f1e6eb511f1970e98f7ac3e2502e2d4",
      abi: [
        {
          type: "constructor",
          inputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "eip712Domain",
          inputs: [],
          outputs: [
            {
              name: "fields",
              type: "bytes1",
              internalType: "bytes1",
            },
            {
              name: "name",
              type: "string",
              internalType: "string",
            },
            {
              name: "version",
              type: "string",
              internalType: "string",
            },
            {
              name: "chainId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "verifyingContract",
              type: "address",
              internalType: "address",
            },
            {
              name: "salt",
              type: "bytes32",
              internalType: "bytes32",
            },
            {
              name: "extensions",
              type: "uint256[]",
              internalType: "uint256[]",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getChainAgnosticDomainSeparator",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "bytes32",
              internalType: "bytes32",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getChipOwners",
          inputs: [
            {
              name: "chip",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "address[]",
              internalType: "address[]",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getDomainSeparator",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "bytes32",
              internalType: "bytes32",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getOwnerChips",
          inputs: [
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "address[]",
              internalType: "address[]",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "hasChip",
          inputs: [
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
            {
              name: "chip",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "owner",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "ownerHasChip",
          inputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "registerChip",
          inputs: [
            {
              name: "chipAddress",
              type: "address",
              internalType: "address",
            },
            {
              name: "chipSignature",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "renounceOwnership",
          inputs: [],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "transferOwnership",
          inputs: [
            {
              name: "newOwner",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "event",
          name: "ChipRegistered",
          inputs: [
            {
              name: "chip",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "owner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "EIP712DomainChanged",
          inputs: [],
          anonymous: false,
        },
        {
          type: "event",
          name: "OwnershipTransferred",
          inputs: [
            {
              name: "previousOwner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "newOwner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "error",
          name: "ECDSAInvalidSignature",
          inputs: [],
        },
        {
          type: "error",
          name: "ECDSAInvalidSignatureLength",
          inputs: [
            {
              name: "length",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "ECDSAInvalidSignatureS",
          inputs: [
            {
              name: "s",
              type: "bytes32",
              internalType: "bytes32",
            },
          ],
        },
        {
          type: "error",
          name: "InvalidShortString",
          inputs: [],
        },
        {
          type: "error",
          name: "OwnableInvalidOwner",
          inputs: [
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "OwnableUnauthorizedAccount",
          inputs: [
            {
              name: "account",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "ReentrancyGuardReentrantCall",
          inputs: [],
        },
        {
          type: "error",
          name: "StringTooLong",
          inputs: [
            {
              name: "str",
              type: "string",
              internalType: "string",
            },
          ],
        },
      ],
      inheritedFunctions: {},
      deployedOnBlock: 9495082,
    },
    TapThatXProtocol: {
      address: "0x9401d9b4388a8ee42f9255b009d9cab5cc325e70",
      abi: [
        {
          type: "constructor",
          inputs: [
            {
              name: "_registry",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "receive",
          stateMutability: "payable",
        },
        {
          type: "function",
          name: "MAX_TIMESTAMP_WINDOW",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "eip712Domain",
          inputs: [],
          outputs: [
            {
              name: "fields",
              type: "bytes1",
              internalType: "bytes1",
            },
            {
              name: "name",
              type: "string",
              internalType: "string",
            },
            {
              name: "version",
              type: "string",
              internalType: "string",
            },
            {
              name: "chainId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "verifyingContract",
              type: "address",
              internalType: "address",
            },
            {
              name: "salt",
              type: "bytes32",
              internalType: "bytes32",
            },
            {
              name: "extensions",
              type: "uint256[]",
              internalType: "uint256[]",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "executeAuthorizedCall",
          inputs: [
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
            {
              name: "target",
              type: "address",
              internalType: "address",
            },
            {
              name: "callData",
              type: "bytes",
              internalType: "bytes",
            },
            {
              name: "value",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "chipSignature",
              type: "bytes",
              internalType: "bytes",
            },
            {
              name: "timestamp",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "nonce",
              type: "bytes32",
              internalType: "bytes32",
            },
          ],
          outputs: [
            {
              name: "success",
              type: "bool",
              internalType: "bool",
            },
            {
              name: "returnData",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          stateMutability: "payable",
        },
        {
          type: "function",
          name: "getChainAgnosticDomainSeparator",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "bytes32",
              internalType: "bytes32",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getDomainSeparator",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "bytes32",
              internalType: "bytes32",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "registry",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "contract TapThatXRegistry",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "usedNonces",
          inputs: [
            {
              name: "",
              type: "bytes32",
              internalType: "bytes32",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "verifyChipAuth",
          inputs: [
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
            {
              name: "target",
              type: "address",
              internalType: "address",
            },
            {
              name: "callData",
              type: "bytes",
              internalType: "bytes",
            },
            {
              name: "value",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "timestamp",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "nonce",
              type: "bytes32",
              internalType: "bytes32",
            },
            {
              name: "signature",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "event",
          name: "AuthorizedCallExecuted",
          inputs: [
            {
              name: "owner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "chip",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "target",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "callData",
              type: "bytes",
              indexed: false,
              internalType: "bytes",
            },
            {
              name: "value",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "nonce",
              type: "bytes32",
              indexed: false,
              internalType: "bytes32",
            },
            {
              name: "success",
              type: "bool",
              indexed: false,
              internalType: "bool",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "EIP712DomainChanged",
          inputs: [],
          anonymous: false,
        },
        {
          type: "event",
          name: "NonceUsed",
          inputs: [
            {
              name: "nonce",
              type: "bytes32",
              indexed: true,
              internalType: "bytes32",
            },
          ],
          anonymous: false,
        },
        {
          type: "error",
          name: "ECDSAInvalidSignature",
          inputs: [],
        },
        {
          type: "error",
          name: "ECDSAInvalidSignatureLength",
          inputs: [
            {
              name: "length",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "ECDSAInvalidSignatureS",
          inputs: [
            {
              name: "s",
              type: "bytes32",
              internalType: "bytes32",
            },
          ],
        },
        {
          type: "error",
          name: "InvalidShortString",
          inputs: [],
        },
        {
          type: "error",
          name: "ReentrancyGuardReentrantCall",
          inputs: [],
        },
        {
          type: "error",
          name: "StringTooLong",
          inputs: [
            {
              name: "str",
              type: "string",
              internalType: "string",
            },
          ],
        },
      ],
      inheritedFunctions: {},
      deployedOnBlock: 9495082,
    },
    TapThatXConfiguration: {
      address: "0x6dc59b9a013bdda49459a57fab54bdde5745fbdb",
      abi: [
        {
          type: "constructor",
          inputs: [
            {
              name: "_registry",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "configurations",
          inputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "targetContract",
              type: "address",
              internalType: "address",
            },
            {
              name: "staticCallData",
              type: "bytes",
              internalType: "bytes",
            },
            {
              name: "value",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "description",
              type: "string",
              internalType: "string",
            },
            {
              name: "isActive",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getConfiguration",
          inputs: [
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
            {
              name: "chip",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "tuple",
              internalType: "struct TapThatXConfiguration.ActionConfig",
              components: [
                {
                  name: "targetContract",
                  type: "address",
                  internalType: "address",
                },
                {
                  name: "staticCallData",
                  type: "bytes",
                  internalType: "bytes",
                },
                {
                  name: "value",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "description",
                  type: "string",
                  internalType: "string",
                },
                {
                  name: "isActive",
                  type: "bool",
                  internalType: "bool",
                },
              ],
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "isConfigured",
          inputs: [
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
            {
              name: "chip",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "registry",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "contract TapThatXRegistry",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "removeConfiguration",
          inputs: [
            {
              name: "chip",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "setConfiguration",
          inputs: [
            {
              name: "chip",
              type: "address",
              internalType: "address",
            },
            {
              name: "targetContract",
              type: "address",
              internalType: "address",
            },
            {
              name: "staticCallData",
              type: "bytes",
              internalType: "bytes",
            },
            {
              name: "value",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "description",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "toggleConfiguration",
          inputs: [
            {
              name: "chip",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "event",
          name: "ConfigurationRemoved",
          inputs: [
            {
              name: "owner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "chip",
              type: "address",
              indexed: true,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "ConfigurationSet",
          inputs: [
            {
              name: "owner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "chip",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "target",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "description",
              type: "string",
              indexed: false,
              internalType: "string",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "ConfigurationToggled",
          inputs: [
            {
              name: "owner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "chip",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "isActive",
              type: "bool",
              indexed: false,
              internalType: "bool",
            },
          ],
          anonymous: false,
        },
      ],
      inheritedFunctions: {},
      deployedOnBlock: 9495082,
    },
    TapThatXExecutor: {
      address: "0x889c085f3294cd8381fcd16c41eab99e96f7fb60",
      abi: [
        {
          type: "constructor",
          inputs: [
            {
              name: "_protocol",
              type: "address",
              internalType: "address",
            },
            {
              name: "_configuration",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "canExecute",
          inputs: [
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
            {
              name: "chip",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "configuration",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "contract TapThatXConfiguration",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "executeTap",
          inputs: [
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
            {
              name: "chip",
              type: "address",
              internalType: "address",
            },
            {
              name: "chipSignature",
              type: "bytes",
              internalType: "bytes",
            },
            {
              name: "timestamp",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "nonce",
              type: "bytes32",
              internalType: "bytes32",
            },
          ],
          outputs: [
            {
              name: "success",
              type: "bool",
              internalType: "bool",
            },
            {
              name: "returnData",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          stateMutability: "payable",
        },
        {
          type: "function",
          name: "previewTap",
          inputs: [
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
            {
              name: "chip",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "tuple",
              internalType: "struct TapThatXConfiguration.ActionConfig",
              components: [
                {
                  name: "targetContract",
                  type: "address",
                  internalType: "address",
                },
                {
                  name: "staticCallData",
                  type: "bytes",
                  internalType: "bytes",
                },
                {
                  name: "value",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "description",
                  type: "string",
                  internalType: "string",
                },
                {
                  name: "isActive",
                  type: "bool",
                  internalType: "bool",
                },
              ],
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "protocol",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "contract TapThatXProtocol",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "event",
          name: "TapExecuted",
          inputs: [
            {
              name: "owner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "chip",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "target",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "nonce",
              type: "bytes32",
              indexed: false,
              internalType: "bytes32",
            },
            {
              name: "success",
              type: "bool",
              indexed: false,
              internalType: "bool",
            },
            {
              name: "description",
              type: "string",
              indexed: false,
              internalType: "string",
            },
          ],
          anonymous: false,
        },
        {
          type: "error",
          name: "ReentrancyGuardReentrantCall",
          inputs: [],
        },
      ],
      inheritedFunctions: {},
      deployedOnBlock: 9495082,
    },
    TapThatXBridgeETHViaWETH: {
      address: "0xfe4f58a325fe8dc6952b2ee286910c439378ff27",
      abi: [
        {
          type: "constructor",
          inputs: [
            {
              name: "_weth",
              type: "address",
              internalType: "address",
            },
            {
              name: "_bridgeOP",
              type: "address",
              internalType: "address",
            },
            {
              name: "_bridgeBase",
              type: "address",
              internalType: "address",
            },
            {
              name: "_protocol",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "receive",
          stateMutability: "payable",
        },
        {
          type: "function",
          name: "bridgeBase",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "contract IL1StandardBridge",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "bridgeOP",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "contract IL1StandardBridge",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "protocol",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "contract TapThatXProtocol",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "unwrapAndBridgeDual",
          inputs: [
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
            {
              name: "minGasLimitOP",
              type: "uint32",
              internalType: "uint32",
            },
            {
              name: "minGasLimitBase",
              type: "uint32",
              internalType: "uint32",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "weth",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "contract IWETH",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "event",
          name: "ETHBridgedViaWETH",
          inputs: [
            {
              name: "owner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "amountBase",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "amountOP",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "minGasLimitBase",
              type: "uint32",
              indexed: false,
              internalType: "uint32",
            },
            {
              name: "minGasLimitOP",
              type: "uint32",
              indexed: false,
              internalType: "uint32",
            },
          ],
          anonymous: false,
        },
      ],
      inheritedFunctions: {},
      deployedOnBlock: 9495082,
    },
    TapThatXPaymentTerminal: {
      address: "0xfdc0967d0433b9238db5bb511ccbbbc6cc63a74f",
      abi: [
        {
          type: "constructor",
          inputs: [
            {
              name: "_registry",
              type: "address",
              internalType: "address",
            },
            {
              name: "_protocol",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "MAX_TIMESTAMP_WINDOW",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "eip712Domain",
          inputs: [],
          outputs: [
            {
              name: "fields",
              type: "bytes1",
              internalType: "bytes1",
            },
            {
              name: "name",
              type: "string",
              internalType: "string",
            },
            {
              name: "version",
              type: "string",
              internalType: "string",
            },
            {
              name: "chainId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "verifyingContract",
              type: "address",
              internalType: "address",
            },
            {
              name: "salt",
              type: "bytes32",
              internalType: "bytes32",
            },
            {
              name: "extensions",
              type: "uint256[]",
              internalType: "uint256[]",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "executePayment",
          inputs: [
            {
              name: "auth",
              type: "tuple",
              internalType: "struct TapThatXPaymentTerminal.PaymentAuthorization",
              components: [
                {
                  name: "payer",
                  type: "address",
                  internalType: "address",
                },
                {
                  name: "payerChip",
                  type: "address",
                  internalType: "address",
                },
                {
                  name: "payee",
                  type: "address",
                  internalType: "address",
                },
                {
                  name: "payeeChip",
                  type: "address",
                  internalType: "address",
                },
                {
                  name: "token",
                  type: "address",
                  internalType: "address",
                },
                {
                  name: "amount",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "timestamp",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "nonce",
                  type: "bytes32",
                  internalType: "bytes32",
                },
              ],
            },
            {
              name: "payerSignature",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "getChainAgnosticDomainSeparator",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "bytes32",
              internalType: "bytes32",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "protocol",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "contract TapThatXProtocol",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "registry",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "contract TapThatXRegistry",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "usedNonces",
          inputs: [
            {
              name: "",
              type: "bytes32",
              internalType: "bytes32",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "verifyPaymentAuth",
          inputs: [
            {
              name: "auth",
              type: "tuple",
              internalType: "struct TapThatXPaymentTerminal.PaymentAuthorization",
              components: [
                {
                  name: "payer",
                  type: "address",
                  internalType: "address",
                },
                {
                  name: "payerChip",
                  type: "address",
                  internalType: "address",
                },
                {
                  name: "payee",
                  type: "address",
                  internalType: "address",
                },
                {
                  name: "payeeChip",
                  type: "address",
                  internalType: "address",
                },
                {
                  name: "token",
                  type: "address",
                  internalType: "address",
                },
                {
                  name: "amount",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "timestamp",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "nonce",
                  type: "bytes32",
                  internalType: "bytes32",
                },
              ],
            },
            {
              name: "signature",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "event",
          name: "EIP712DomainChanged",
          inputs: [],
          anonymous: false,
        },
        {
          type: "event",
          name: "NonceUsed",
          inputs: [
            {
              name: "nonce",
              type: "bytes32",
              indexed: true,
              internalType: "bytes32",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "PaymentExecuted",
          inputs: [
            {
              name: "payer",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "payerChip",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "payee",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "payeeChip",
              type: "address",
              indexed: false,
              internalType: "address",
            },
            {
              name: "token",
              type: "address",
              indexed: false,
              internalType: "address",
            },
            {
              name: "amount",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "nonce",
              type: "bytes32",
              indexed: false,
              internalType: "bytes32",
            },
          ],
          anonymous: false,
        },
        {
          type: "error",
          name: "ECDSAInvalidSignature",
          inputs: [],
        },
        {
          type: "error",
          name: "ECDSAInvalidSignatureLength",
          inputs: [
            {
              name: "length",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "ECDSAInvalidSignatureS",
          inputs: [
            {
              name: "s",
              type: "bytes32",
              internalType: "bytes32",
            },
          ],
        },
        {
          type: "error",
          name: "InvalidShortString",
          inputs: [],
        },
        {
          type: "error",
          name: "ReentrancyGuardReentrantCall",
          inputs: [],
        },
        {
          type: "error",
          name: "StringTooLong",
          inputs: [
            {
              name: "str",
              type: "string",
              internalType: "string",
            },
          ],
        },
      ],
      inheritedFunctions: {},
      deployedOnBlock: 9495082,
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
